// Global.scss
// All styles here apply to all components and elements

// Reset 
@import url('reset.scss');

// Import font
@import url('https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,600,700&display=swap');
@import url('https://fonts.googleapis.com/css?family=PT+Sans:400,700&display=swap');

$sans: 'Source Sans Pro', sans-serif;
// Variables
$borderRadius: 4px;
$transition: 0.2s;
$text: #0C141E;
$border: rgba(12,20,30,0.17);

html{
	overflow: hidden;
}
body, html {
	margin: 0;
	padding: 0;
	width: 100%;
	height: 100%;
	font-family: $sans;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}
// Root on index.html
app-root{
	width: 100vw;
	height: 100vh;
	display: flex;
	flex-direction: column;
	overflow: hidden;
}

// Initial loader that shows before angular
.initial-loader {
	position: fixed !important;
	width: 100%;
	height: 100%;
	opacity: 1;
	z-index: 5000;
	background-color: rgba(0,0,30,0.6);
	background-image: url('assets/images/usgs-loading.svg');
	display: block !important;
	background-repeat: no-repeat;
	background-size: 120px auto;
	background-position: center center;

	&:after {
		content: 'Loading...';
		position: fixed;
		top: 64%;
		font-size: 22px;
		color: white;
		width: 100%;
		text-align: center;
		z-index: 5001;
	}
}

////////////////////////////
////////////////////////////
//     Global styles     //
//////////////////////////
//////////////////////////

// Buttons
// Buttons
button{
	background-color: #142234;
	color: white;
	box-sizing: border-box;
	padding: 7px 10px;
	border-radius: $borderRadius;
	border: none;
	transition: $transition;
	font-size: 14px;
	font-weight: 600;

	&:hover{
		cursor: pointer;
		background-color: #0C141E;
		transition: $transition;
		text-decoration: underline;
	}

	&:disabled{
		background-color: #E1E7EE;
		color: #9aa6b5;

		&:hover{
			background-color: #E1E7EE;
			text-decoration: none;
			cursor: not-allowed;
		}
	}

	&.full-width{
		width: 100%;
		display: block;
	}

	// Button with icon
	&.icon-button{
		i{
			margin-right: 5px;
		}
	}

	// Active button waiting for action
	// Green Background
	&.waiting{
		background-color: #44BEAE;
		transition: $transition;

		&:hover{
			background-color: #389C8F;
		}
	}

	// Colors
	// Colors
	&.red{
		background-color: #ED1515;
		color: white;
		&:hover{
			background-color: #D00808;
		}
	
		&:disabled{
			background-color: #FFACAC;
			color: white;
			&:hover{
				background-color: #FFACAC;
			}
		}
	}
	// Blue
	&.blue{
		background-color: #2643FC;
		color: white;
		&:hover{
			background-color: #0D28E5;
		}
	
		&:disabled{
			background-color: #B4BBE3;
			color: white;
			&:hover{
				background-color: #B4BBE3;
			}
		}
	}
	// Grey/white
	&.white{
		background-color: #EAECF4;
		color: #1C2541;
		&:hover{
			background-color: #D9DDEB;
		}
	
		&:disabled{
			background-color: white;
			color: #303E6C;
			&:hover{
				background-color: white;
			}
		}
	}
}

// Checkboxes
// Checkboxes
input[type="checkbox"],
input[type="radio"] {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	-webkit-tap-highlight-color: transparent;
	cursor: pointer;
	height: 24px;
	min-height: 24px;
	max-height: 24px;
	width: 24px;
	min-width: 24px;
	max-width: 24px;
	margin: 0;
	border-radius: 3px;
	box-sizing: border-box;
	border: 1.5px solid #D9DDE4;
	transition: all 0.2s ease;
	background: white;
	position: relative;

	

	&:focus{
		transition: all 0.2s ease;
	}

	&:after {
		content: "\f00c";
		font-family: "Font Awesome 5 Pro";
		transition: 0.2s;
		transform: scale(0.75);
		color: #1052D9;
		opacity: 0.2;
		font-size: 16px;
		width: 100%;
		height: 100%;
		font-weight: 800;

		display: flex;
		text-align: center;
		width: 100%;
		height: 100%;
		justify-content: center;
		flex-direction: column;
	}

	// Hover
	&:hover{
		transition: all 0.2s ease;
		border-color: #C7CDD7;

		&:after{
			opacity: 0.6;
		}
	}

	// Checked hover
	&:checked {
		&:hover{
			border-color: #C7CDD7;
			&:after{
				opacity: 0.5;
			}
		}
	}

	// When checked
	&:checked:after {
		transform: scale(1);
		opacity: 1;
	}
}
// Change checkboxes to checks
input[type="checkbox"] {
	border-radius: 3px;

	&:after {
		content: "\f00c";
		transform: scale(0.75);
		opacity: 0.2;
		font-size: 15px;
	}

	&:checked {
		&:hover{
			&:after{
				opacity: 0.5;
			}
		}
	}

	&:checked:after {
		opacity: 1;
	}
}

// Switch icon to circle for radio,
// make circle
input[type="radio"] {
	border-radius: 50%;

	&:after {
		content: "\f111";
		font-size: 14px;
		position: relative;
		left: -0.05px;
		top: -0.025px;
	}

	&:checked {
		&:hover{
			cursor: default;
			&:after{
				opacity: 1;
			}
		}
	}

	&:checked:after {
		opacity: 1;
	}
}



///////////////////////////////
//   Toggle / Accordion     //
/////////////////////////////
.toggle-header{
	display: flex;
	box-sizing: border-box;
	justify-content: space-between;
	width: 100%;
	max-height: 100%;
	overflow: auto;
	padding: 0 15px;
	height: 50px;
	color: #0C141E;
	background-color: rgb(236, 242, 255);
	transition: 0.2s;
	border-bottom: 1px solid rgb(204, 209, 218);

	// Toggle within a toggle body 
	// Shrink
	&.nested{
		padding: 0 10px;
		height: 38px;
		background-color: white;
	}

	.text,
	.icon{	
		display: flex;
		flex-direction: column;
		justify-content: center;
		font-weight: bold;
	}
	.text{
		font-size: 16px;
		font-weight: 600;
	}
	.icon{
		font-size: 22px;

		// Plus and minus for collapsible
		.fa-minus-circle,
		.fa-plus-circle{
			opacity: 0.5;
			transition: $transition;
		}

		// Checkbox
		.fa-check-circle{
			color: #1052D9;
		}
		.fa-times-circle{
			color: #ED1515;
		}
	}

	// hover
	&:hover{
		cursor: pointer;
		transition: 0.2s;
		background-color: rgb(226, 230, 245);;
		
		.text{
			text-decoration: underline;
		}

		// Plus and minus for collapsible
		.fa-minus-circle,
		.fa-plus-circle{
			opacity: 1 !important;
			transition: $transition;
		}
	}
	&.nested:hover{
		background-color: white;
	}

	// Users cannot toggle, so no hover state changes
	&.notoggle{
		background-color: rgb(236, 242, 255);
		&:hover{
			cursor: default;
			.text{
				text-decoration: none;
			}
		}
	}
	// Can't access these tabs until allowed,
	// So fade when blocked
	&.blocked{
		opacity: 0.5;
		background-color: rgb(236, 242, 255);

		.icon{
			display: none;
		}

		&:hover{
			cursor: default;
			.text{
				text-decoration: none;
			}
		}
	}
}

.toggle-block{
	display: block;
	box-sizing: border-box;
	max-height: 0px;
	width: 100%;
	padding: 0;
	transition: padding 0.2s ease-in, max-height 0.2s ease, padding 0.2s ease-in;
	overflow: hidden;
	border-bottom: none;

	// When class visible, expand
	&.visible{
		max-height: 1000px;
		padding: 15px;
		transition: padding 0s ease, max-height 0.2s ease, border-bottom 0s ease;
		border-bottom: 1px solid #B7BECC;
	}

	// Certain elements need to extend longer than .visible's max height,
	// So add visible-extend - won't animate anymore, but won't cut off content
	&.visible-extend{
		max-height: none;
		padding: 15px;
		transition: padding 0s ease, max-height 0.2s ease, border-bottom 0s ease;
		border-bottom: 1px solid #B7BECC;
	}

	// Remove bottom border (last item)
	&.remove-bottom-border{
		border-bottom: none;

		&.visible{
			border-bottom: none;
		}
	}

	.toggle-block-body{
		display: block;
		box-sizing: border-box;

	}
}
/////////////////////
//     Layout     //
///////////////////
.space10,.space20,.space30{
	display: block;
	width: 100%;
}
.space10{
	height: 10px;
}
.space20{
	height: 20px;
}
.space30{
	height: 30px;
}



/////////////////////////
//     Typography     //
///////////////////////


h1,h2,h3,h4,h5,h6,a,p,label{
	font-family: $sans;
	color: $text;
}
h1,h2,h3,h4,h5,h6{
	max-width: 700px;

	&.unset{
		max-width: none;
	}
}
h1,h2{
	color: $text;
}
h1{
	font-size: 30px;
	padding: 0 0 2px 0;
	line-height: 38px;
	font-weight: 700;
	letter-spacing: 0.3px;
}
h2{
	font-size: 22px;
	line-height: 28px;
	padding: 0 0 2px 0;
	font-weight: 700;
}
h3, h4, h5{

}
h3{
	font-size: 18px;
	letter-spacing: 0.2px;
	line-height: 26px;
	font-weight: 700;
}
h4{
	font-size: 16px;
	font-weight: 500;
	line-height: 22px;
	letter-spacing: 0.2px;
}
h5{
	font-size: 16px;
	font-weight: 700;
	text-transform: uppercase;
	line-height: 20px;
	letter-spacing: 0.5px;
}
h6{
	font-size: 12px;
	color: #1D304B;
	font-weight: 800;
	text-transform: uppercase;
	line-height: 16px;
	letter-spacing: 0.6px;
}


////////////////////////
//   Text Elements   //
//////////////////////
// Paragraphs
p{
	font-size: 13.5px;
	line-height: 18px;
	max-width: 700px;
	padding: 8px 0;
	color: #142234;
	letter-spacing: 0.2px;

	&.unset{
		max-width: none;
		padding: 0;
		margin: 0;
	}

	&.tight{
		line-height: 20px;
	}

	// Decrease sizing
	&.small{
		font-size: 13px;
		line-height: 20px;
	}
	// Increase sizing
	&.big{
		font-size: 20px;
		line-height: 36px;
	}
	
	// Bold
	b{
		font-weight: 700;
	}
}


// Default Links
a{
	color: #083489;
	transition: $transition;

	&:hover{
		color: #1052D9;
		transition: $transition;
	}
}

// Listts
ul{
	list-style-type: disc;
	display: block;
	box-sizing: border-box;
	padding: 6px 0 6px 25px;

	li{
		line-height: 140%;
		padding: 2px 0;
	}
}
ol{
	list-style-type: decimal;
}
ul{
	list-style-type: disc;
}


//////////////////////////////
//          Modal          //
////////////////////////////
.modal-wrapper{
	z-index: 2000;
	position: fixed;
	top: 0;
	left: 0;
	width: 100vw;
	height: 100vh;
	background-color: rgba(0,0,0,0.5);
	display: flex;
	flex-direction: column;
	justify-content: center;
	box-sizing: border-box;
	padding-bottom: 10vh;

	// Full width mobile
	@media (max-width: 768px) {
		padding-bottom: 0;
	}

	.modal-box{
		display: flex;
		flex-direction: column;
		position: fixed;
		width: 500px;
		max-height: 75vh;
		background-color: white;
		min-height: 15vh;
		margin: 0 auto;
		border-radius: 10px;
		position: fixed;
		left: 50%;
		margin-left: -250px;

		// Full width mobile
		@media (max-width: 768px) {
			width: 100%;
			left: 0;
			margin-left: 0;
			bottom: 0px;
			border-top-left-radius: 25;
			border-top-right-radius: 25;
			border-bottom-left-radius: 0;
			border-bottom-right-radius: 0;
		}

		// Top of modal / header
		.modal-top{
			display: flex;
			justify-content: space-between;
			height: 50px;
			box-sizing: border-box;
			padding: 0 15px;
			border-bottom: 1px solid #D9DDE4;
			min-height: 50px;

			.title,
			.close-modal{
				display: flex;
				flex-direction: column;
				justify-content: center;
			}

			.title{
				font-size: 18px;
				font-weight: 700;
			}

			// Close X
			.close-modal{
				opacity: 0.5;
				transition: 0.2s;

				i{
					font-size: 22px;
				}

				&:hover{
					cursor: pointer;
					opacity: 1;
					transition: 0.2s;
				}
			}
		}

		// Main body content
		.modal-middle{
			flex-grow: 3;
			box-sizing: border-box;
			padding: 10px 15px;
			overflow: auto;
		}

		// Footer / bottom
		.modal-buttons{
			padding: 15px;
			box-sizing: border-box;
			border-top: 1px solid #D9DDE4;
			display: flex;

			&.center{
				justify-content: center;
			}

			&.space-around{
				justify-content: space-between;
			}

			button{
				margin: 0 5px;
			}
		}
	}
}

// Modal Input Rows
.modal-form-row{
	display: flex;
	box-sizing: border-box;
	padding: 5px 0;

	label,
	.row-input{
		display: flex;
		flex-direction: column;
		justify-content: center;
	}

	label{
		padding-right: 15px;
		line-height: 14px;
		width: 150px;
		font-size: 14px;

		small{
			display: block;
			font-size: 12px;
		}
	}

	.row-input{
		flex-grow: 3;

		input[type=text],
		input[type=number]{
			width: 100%;
			padding: 7px;
			box-sizing: border-box;
			border-radius: 4px;
			box-shadow: none;
			border: 1px solid $border;

		}

		&.ri-flex{
			display: flex;
			justify-content: space-between;

			.input-group{
				display: flex;
				justify-content: space-between;
				flex-grow: 3;
			}
		}
	}
}


///////////////////////////////
//   Misc global elements   //
/////////////////////////////

// Search
.search-api-container{
	margin: 0;
	padding: 0;
	max-width: 100% !important;
	width: 100% !important;

	.search-api-icon{
		padding-bottom: 4px;
	}
}
.search-api-menu{
	max-height: 200px;
	overflow: hidden;
}


// Map
#leaflet{
	display: block;
	position: relative;
	left: 0;
	top: 0;
	margin: 0;
	width: 100% !important;
	height: 100% !important;
}
.leaflet-control-attribution{
	font-size: 8px !important;
	background: transparent !important;
	color: rgba(0,0,0,0.5) !important;
}

// Fix leaflet loading grey tiles
.leaflet-pane{
    img{
        position: absolute !important;
    }
}



// Hide everything on print
// In component scss file, override with 
// opposite for print area
@media print{
	body * {
		visibility: hidden !important;
	}
	.sidebar,
	.full-map,
	.footer{
		display: none !important;
	}
}


// NG Select over charts
.chart-wrapper{
	.ng-select{
		background: white;
		border: 1px solid $border;
		box-sizing: border-box;
		box-sizing: border-box;
		border-radius: 4px;
		display: block;
		max-width: 180px;

		.ng-value-container{
			padding: 7px 7px 10px 7px;
			font-size: 16px;
		}
	}
	.ng-dropdown-panel{
		background-color: #f2f3f5;
		box-shadow: 0 1.3px 2.4px -5px rgba(0, 0, 0, 0.105), 0 10px 19px -5px rgba(0, 0, 0, 0.21);
		box-sizing: border-box;
		padding: 7px;
		border: 1px solid $border;
		top: 105%;
		border-radius: $borderRadius;
		left: 0px;

		.ng-option{
			padding: 5px;
			font-size: 14px;
			font-weight: 600;

			&:hover{
				text-decoration: underline;
			}
		}
	}
}



// Config Form
#configForm{

	.modal-form-row{

		label{
			padding-left: 5px;
			text-transform: capitalize;
		}
	}

}